/* file -  eldat */
#include "f:\m\els\elb\elmod.h"
#include "f:\m\rid\vtdef.h"
/* code -  flags etc */
int elFlsi = 0;
int elFeis = 1;
int elFmap = 1;
int elVclk = 1;
int elFvrt = 0;
int elVmmu = 0;
int elVmai = 0;
int elFstp = 0;
int elVdbg = 1;
int elVlog = 0;
FILE *elPlog = NULL;
int elVpau = 0;
int bgVdsk = 0;
int elVtrp = 0;
int elVemt = 0;
int elVall = 0;
int elVxdp = 0;
int elVdos = 0;
int elVrsx = 0;
int elFold = 0;
int elFwri = -1;
int elFsma = 1;
int elF7bt = 0;
int elFuni = 0;
int elFy2k = 1;
int elFvrb = 0;
int elFvtx = 1;
int elFiot = 1;
int elVhtz = 50;
int elFdlx = 1;
int elFrsx = 0;
int elVebd = 0;
elTadr elVepc = 0;
int elVprb = 0;
int elFupr = 0;
int elFhog = 0;
int elFltc = 1;
char elAsys [mxSPC]= {0};
char elAcmd [mxLIN]= {0};
char *elPcmd = NULL;
int elVcmd = 0;
char *elPsig = NULL;
int elVsig = 0;
/* code -  cpu data */
#if MEMARR
#define elMAR  "Array"
elTbyt elPmem [elMEM];
#else 
#define elMAR  "Pointer"
elTbyt *elPmem = NULL;
#endif 
elTbyt *elPmch = NULL;
elTwrd *elPreg = NULL;
elTwrd elVpsr = 0;
elTwrd elVpss = 0;
char elAzer [512]= {0};
elTadr elVevn = ~(0);
elTadr elVcur = 0;
elTwrd elVopc = 0;
int elVsch = 0;
elTadr elVswa = 0;
elTadr elVdwa = 0;
elTadr elVsba = 0;
elTadr elVdba = 0;
elTadr elVtwa = 0;
elTadr elVtba = 0;
elTwrd elVswv = 0;
elTbyt elVsbv = 0;
elTwrd elVdwv = 0;
elTbyt elVdbv = 0;
elTwrd elVtwv = 0;
elTbyt elVtbv = 0;
elTlng elVtlv = 0;
elTlng elVdlv = 0;
elTlng elVslv = 0;
/* code -  debugger data */
int bgVuni = 0;
int bgVhlt = 0;
int bgVstp = 0;
int bgVcnt = 0;
int bgVict = 0;
int bgVreg = 0;
int bgVval = 0;
int bgVter = 0;
int bgVfst = 1;
int bgVbus = 0;
int bgVcpu = 0;
int bgVcth = 0;
elTwrd bgVfen ;
elTwrd bgVfad ;
elTwrd bgVfel ;
int bgVzed = 0;
int bgVprv = 0;
int bgVtpb = 0;
elTwrd bgVund = 0;
int bgVred = 0;
/* code -  instruction history */
hiTsto hiIsto = {0};
void hi_put()
{ hiTsto *sto = &hiIsto;
  int idx = sto->Vput;
  sto->Ahis[idx].Vloc = PC;
  sto->Ahis[idx].Vmod = PS;
  if ( ++idx >= hiLEN) {idx = 0 ;}
  sto->Vput = sto->Vget = idx;
  sto->Ahis[idx].Vloc = 0;
  sto->Ahis[idx].Vmod = 0;
} 
hi_prv(
elThis *his )
{ hiTsto *sto = &hiIsto;
  int idx = sto->Vget - 1;
  if ( idx < 0) {idx = hiLEN-1 ;}
  sto->Vget = idx;
  his->Vloc = sto->Ahis[idx].Vloc;
  his->Vmod = sto->Ahis[idx].Vmod;
} 
hi_nxt(
elThis *his )
{ hiTsto *sto = &hiIsto;
  int idx = sto->Vget + 1;
  elTwrd val ;
  if ( idx >= hiLEN) {idx = 0 ;}
  sto->Vget = idx;
  his->Vloc = sto->Ahis[idx].Vloc;
  his->Vmod = sto->Ahis[idx].Vmod;
} 
