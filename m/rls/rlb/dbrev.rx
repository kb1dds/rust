/* file -  db_rev - reverse exception out */
#include "f:\m\rid\rider.h"
#include "f:\m\rid\dbdef.h"
#include "f:\m\rid\dadef.h"
#include "f:\m\rid\imdef.h"
#include "f:\m\rid\fidef.h"
#include "f:\m\rid\stdef.h"
#include "f:\m\rid\medef.h"
#include "f:\m\rid\ctdef.h"
#include <stdio.h>
#include "f:\m\rid\wimod.h"
#include "f:\m\rid\chdef.h"
#define handle  HANDLE
int db_get (handle ,char *,size_t );
db_rev(
dbTexc *exc )
{ char spc [mxSPC];
  char lin [mxLIN];
  char mod [mxSPC];
  char num [mxLIN];
  char *typ ;
  char *ptr ;
  char *dig ;
  handle fil ;
  char *lft ;
  char *rgt ;
  int pln ;
  ULONG pad ;
  int csn ;
  int cln ;
  ULONG cad ;
  int fnd = 0;
  int fln = 0;
  int fst = 1;
  BYTE *byt ;
  int cnt ;
  PUT("%%%s-I-", imPfac);
  PUT("Image=[%s] IP=%X SP=%X\n", exc->Aspc, exc->Pip, exc->Psp);
  st_cop (exc->Aspc, spc);
  typ = st_fnd (".", spc);
  if ( !typ) {typ = st_end (spc) ;}
  st_cop (".map", typ);
  st_low (spc);
  fil = CreateFile (spc, GENERIC_READ,FILE_SHARE_READ|FILE_SHARE_WRITE,NULL, OPEN_EXISTING, 0, NULL);
  if ( fil == INVALID_HANDLE_VALUE) {
     PUT("%%%s-W-File not found [%s]\n", imPfac, spc);return 0; }
  while ( db_get (fil, lin, mxLIN)) {
    if( !st_fnd ("Line numbers", lin))continue;
    if( (lft = st_fnd ("(", lin)) == 0)continue;
    if( (rgt = st_fnd (")", lin)) == 0)continue;
    *(char *)(me_cop (lft+1, mod, rgt-(lft+1)))= 0;
    db_get (fil, lin, mxLIN);
    while ( db_get (fil, lin, mxLIN)) {
      ptr = lin;
      while ( *ptr) {
        if( *ptr <= 32){ ++ptr ; continue;}
        dig = num;
        while ( ct_dig (*ptr)) {*dig++ = *ptr++ ;}
        *dig = 0;
        SCN(num, "%d", &cln);
        while ( *ptr <= 32) {++ptr ;}
        dig = num;
        while ( ct_hex (*ptr)) {*dig++ = *ptr++ ;}
        *dig = 0;
        SCN(num, "%X", &csn);
        if ( *ptr == ':') {++ptr ;}
        dig = num;
        while ( *ptr > 32) {*dig++ = *ptr++ ;}
        *dig = 0;
        SCN(num, "%X", &cad);
        cad += csn * 0x1000;
        if( cad >= (ULONG )exc->Pip){ ++fnd ; break;}
        fst = 0;
        pln = cln, pad = cad;
      } 
      if( fnd)break;
    } 
    if( fnd)break;
  } 
  if ( !fnd || fst) {
    PUT("%%%s-W-Source line not located\n",imPfac);
    byt = exc->Pip;
    cnt = 5;
    while ( cnt--) {
      byt = db_dis (0, lin, byt);
      PUT("%s\n", lin);
    } 
    return 0; }
  PUT("%%%s-I-Module=[%s] Line=%d\n", imPfac, mod, pln);
  fil = CreateFile (mod, GENERIC_READ,FILE_SHARE_READ|FILE_SHARE_WRITE,NULL, OPEN_EXISTING, 0, NULL);
  if ( fil == INVALID_HANDLE_VALUE) {
     PUT("%%%s-W-File not found [%s]\n", imPfac, mod);return 0; }
  cln = pln;
  pln = cln - 3;
  if ( pln < 0) {pln = 0 ;}
  fln = 0;
  db_get (fil, lin, mxLIN);
  while ( db_get (fil, lin, mxLIN)) {
    if( st_scn ("#line", lin))continue;
    ++fln;
    if( fln < pln)continue;
    PUT("%d ", fln);
    if ( fln == cln) {PUT("*") ;}
    PUT("\t%s\n", lin);
    if( fln > cln+3)break;
  } 
} 
/* code -  db_get - Returns next line from a file */
int db_get(
handle han ,
char *buf ,
size_t cnt )
{ char *dot = buf;
  int cha ;
  ULONG rea ;
  for(;;)  {
    *dot = 0;
    if( cnt == 0)break;
    ReadFile (han, &cha, 1, &rea, NULL);
    if( !rea)return 0;
    cha &= 0xff;
    if(( cha == 0)
    ||(cha == _cr))continue;
    if( cha == _nl)break;
    *dot++ = cha;
    --cnt;
  } 
  return 1;
} 
