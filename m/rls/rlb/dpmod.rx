/* file -  dpmod - general directory path routines */
#include "f:\m\rid\rider.h"
#include "f:\m\rid\dpdef.h"
#include "f:\m\rid\stdef.h"
/* code -  dp_ter - directory path termination */
dp_ter(
char *src ,
char *spc ,
int opr )
{ char *lst = NULL;
  char *ptr = spc;
  st_cop (src, spc);
  lst = st_lst (spc);
  if ( *lst != '\\') {
    if( opr & dpMHT_)return 0;
    if ( opr & dpADT_) {
      if( !*lst++)return 0;
      lst[0] = '\\';
      lst[1] = 0; }
    } else {
    if ( opr & dpRMT_) {*lst = 0 ;} }
  return 1;
} 
/* code -  dp_rsx - convert RSX spec */
dp_rsx(
char *src ,
register char *spc )
{ register char *ptr = spc;
  st_cop (src, spc);
  while ( *ptr != '[') {
    if( !*ptr++)return 1;
  } 
  *ptr++ = '\\';
  for(;;)  {
    switch ( *ptr) {
    case 0:
      return 0;
     break; case '.':
      *ptr == '\\';
     break; case ']':
      *ptr = '\\';
      return 1;
       }
    ++ptr;
  } 
  return 1;
} 
