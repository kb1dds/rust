/* file -  mtutl - meta utilities */
#include "f:\m\rid\rider.h"
#include "f:\m\rid\stdef.h"
#include "f:\m\rid\iodef.h"
#include "f:\m\rid\ctdef.h"
#include "f:\m\rid\abdef.h"
#include "f:\m\rid\imdef.h"
#include "f:\m\rid\mtdef.h"
/* code -  mt_scn - scan leading string */
int mt_scn(
char *mod ,
char *lin )
{ char *pst ;
  st_trm (lin);
  if( (pst = st_scn (mod, lin)) == NULL)return 0;
  st_mov (pst, lin);
  st_trm (lin);
  return 1;
} 
/* code -  mt_bal - balance string */
void mt_bal(
char *(*ipt ),
char *(*opt ))
{ char *src = *ipt;
  char *dst = *opt;
  int cha ;
  *dst++ = cha = *src++;
  if ( !(cha == '"' || cha == '\'')) {
    return; }
  while ( *src) {
    if( (*dst++ = *src++) == cha)break;
  } 
  *ipt = src, *opt = dst;
} 
/* code -  mt_rep - report and set status */
int mt_rep(
mtTmet *met ,
char *msg ,
char *obj )
{ 
#if 0
  mtTmet *lin = met->Plin;
  char *txt = NULL;
  char *src = met->Psrc;
  if ( lin != NULL) {txt = lin->Psrc ;}
  if ( *src != 0) {PUT("%s\n", src) ;}
  if ( txt != 0) {PUT("[%s] ", txt) ;}
  im_rep (msg, obj);
  if ( *msg == 'F') {im_exi () ;}
  if ( *msg == 'E') {++maVerr ;}
#endif 
} 
