.title	sprintf	Formatted Numeric Conversion
.include "lib:crt.mac"
fbdef$
smini$

;
;+
;
; Index		Formatted Conversion
;
; Usage
;
;	char *
;	sprintf(buffer, format, arg1, ...);
;	char		*buffer;
;	char		*format;
;
; Description
;
;	sprintf() converts and formats its arguments, writing the
;	result to the indicated string buffer.
;
;	For information on formatting, please refer to the description
;	of printf.
;
;	sprintf() returns a pointer to the EOS byte at the end
;	of the output buffer.  Note, however, that this feature
;	is not transportable to other C implementations.
;
; Bugs
;
;-
;
; Edit history
; 000001 02-Jul-82 MM	Split out from printf
; 000002 03-Aug-82 MM	.doprnt -> $$prnt
; 000003 19-Jan-02 BQT	Changed for I/D space.
;
cccod$
assume	fb.flg eq 0
assume	fb.man eq 4
assume	fb.ptr eq 6

sprintf::
	jsr	r5,csv$			; Link environments
	psh	c$pmtr(r5)		; fb.ptr - pointer
	psh	#100$			; fb.man - manual control routine
	clr	-(sp)			; fb.chn
	psh	#fbOPN$!fbSEQ$!fbMAN$	; fb.flg - manual control file
	mov	sp,r4			; file block
	mov	r4,-(sp)		; _doprnt arg block, fildes
	mov	#C$PMTR+4,-(sp)		; offset to first arg
	add	r5,(sp)			; -> first arg
	mov	C$PMTR+2(r5),-(sp)	; format

	call	$$prnt			; $$prnt(format, args, fildes)	;02
	mov	fb.ptr(r4),r0		; r0 -> last byte
	clrb	(r0)			; Terminate the buffer
	jmp	cret$			; exit

100$:	stack	ret,fil,opr		;
	cmpb	sp.opr(sp),#fbPUT.	; this a put?
	bne	110$			; nope
	movb	r0,@fb.ptr(r4)		; yep
	inc	fb.ptr(r4)		;
	mov	#1,r0			; success
110$:	return

	.end

