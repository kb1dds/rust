.title	fbrea - file block read/write
.include "lib:crt.mac"
$emdef
fbdef$
smini$

code	fb$rea - read file block
code	fb$wri - write file block

; In:	r4	file block has all parameters
;
; Out:	c=1	I/O error
;
;	o FB$REA and FB$WRI own physical file end. We really don't
;	  know how long some files are until I/O fails.
;
; Note: c=0/c=1 is maintained through the first 14 instructions
; of this routine. Also, c=1 when RON$ is passed to 20$.

fb$rea::tst	(pc)+			;? c=0	
fb$wri::sec				;? c=1
	pshs	<r1,r0>			;?
	bcc	10$			;? read
	bpsw	#fbRON$,(r4),20$	;? read-only error
10$:	bic	#fbERR$!fbFLU$,(r4)	;? clear error and flush flag
	mov	sp,r1			;?
	bic	-(sp),(sp)		;? #0 => wait i/o
	psh	#256.			;? word count
	psh	fb.buf(r4)		;? buffer
	psh	fb.blk(r4)		;? block
	movb	#emrea.,-(sp)		;?
	adc	(sp)			;?
	swab	(sp)			;
	movb	fb.chn(r4),(sp)		;
	mov	sp,r0			;
	emt	^o375			; do it
	mov	r1,sp			;
	bcc	30$			;
20$:	bis	#fbEOF$!fbERR$,(r4)	; ugly
30$:	pops	<r0,r1>			; c=0/1
	return

.end
