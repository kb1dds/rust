;???;	TEMPORARY CODE
;+++;	FIOPR - Move data out to avoid linking fi$opr code redundantly
.title	fiopr - file operation
.include "lib:crt.mac"
$cidef
$didef
$jbdef
fbdef$
smini$

;	This routine used by fi_opn, fi_del, fi_ren rt_fat etc.
;
;	1. Call fi_fet to translate name, check status and fetch
;	2. Fail with optional message if no such device
;	3. Issue relevant EMT 375
;	4. Fail with optional message
;	5. Release driver if operation is not fi_opn ()
;	   In fact, like DECUS-C we don't release drivers 
;	   Because we might end up in a fetch/release loop
;
;	If a user message is specified and fetch fails then
;	an invalid device warning is issued separately.
;
;	r0=0	operation failed
;	r0=1	fine and fb.len = operation r0 result
;
;	def has this format:
;
;	.byte	cod	; emt 375 code
;	.byte	pst	; post processing: 
;			;  -1  purge file and release driver
;			;   0  release driver
;			;   1  neither purge nor release
;	.asciz	/E-.../	; default error message

  proc	fi$opr	<r2,r3,r4>
	p1	fil,r4			; file block
	p2	spc			; ascii file spec
	p3	msg			; user message
	p4	def,r3			; code and default message
	p5	iob			; i/o block
	mov	#1,r2			; assume success
					;
	call	rt.fet spc(sp)		; fetch the driver
	mov	r0,fb.drv(r4)		; save driver address
	beq	10$			; no driver -- fail
;;;	mov	f$idst,fb.dsw(r4)	; device status word (from rt_dst)
clr fb.dsw(r4)
					;
	mov	iob(sp),r0		; get the I/O block
	movb	fb.chn(r4),(r0)		; the channel
	movb	(r3),1(r0)		; move in the code
	mov	#f$ispc,2(r0)		; filespec
	emt	^o375			; do it
	movb	@#j$berr,fb.err(r4)	; return RT-11 error code
	bcs	15$			; failed
					;
	mov	r0,fb.len(r4)		; return length in file block
	tstb	1(r3)			; and the disposition is?
	bgt	30$			; keep driver
	beq	20$			; lose driver
	.purge	fb.chn(r4)		; lose file
	br	20$			; and driver
					;
10$:	movb	@#j$berr,fb.err(r4)	; return RT-11 error code
	beqw	msg(sp),15$		; no message 
	call	fi$rep #f$iidv,spc(sp);,#0; W-Invalid device
15$:	cmpb	(r3)+,(r3)+		; skip prefix to default message
	call	fi$rep msg(sp),spc(sp),r3; sag es ohne klage
	clr	r2			; failed
20$:	;call	fb$rel			; release any driver
30$:	mov	r2,r0			;
	end

.end
