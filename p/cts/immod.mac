.title	immod - image routines
.include "lib:crt.mac"
$aldef
$esdef
$jbdef
fbdef$
smini$

;	Rider image init and exit
;
;	im_ini ()	Setup facility name, init things
;	im_rep (...)	Report message (front-end)
;
;	im_war ()	Warn - continue
;	im_err ()	Error - continue (user establishs restart bypass)
;	im_fat ()	Fatal - abort
;
;	im_exi ()	Exit with accumulated status

data	immod 

ccstr$
i$mpre:	.asciz	/?/
i$mfac:	.asciz	/NONAME/
ccdat$
imPpre::.word	i$mpre
imPfac::.word	i$mfac
imPwar::.word	im$nop
imPerr::.word	im$nop
imPfat::.word	im$nop
imPexi::.word	im$nop
imPrep::.word	im$rep
cccod$

code	im_ini - image init

;	im_ini (*fac) void
;
;	Pickup optional facility
;
;???	O/S flags are not set here 

	stack	ret,fac
im.ini::mov	sp.fac(sp),r0		; got a facility?
	beq	im$nop			; nope
	mov	r0,imPfac		; yep
im$nop::return				; null routine

  proc	im.rep
	p1	msg
	p2	obj
	call	@imPrep msg(sp),obj(sp)
  end

im.war::bisb	#eswar$,@#j$bsev	; setup warning status
	call	@imPwar			; call user thing
	return

im.err::bisb	#eserr$,@#j$bsev	; setup warning status
	call	@imPerr			; call user thing
	return

im.fat::bisb	#esfat$,@#j$bsev	; setup warning status
	call	@imPfat			; call user thing
;	fall	im.exi			;
im.exi::call	@imPexi			; call bypass
	mov	sp,r0			; ne => app fail
	.exit

.end
