.title	meini - me_ini - init memory
.include "lib:crt.mac"
$jbdef

ccdat$
m$ebas::.word	0			;\start of dynamic memory
m$elim::.word	0			;/limit of dynamic memory
cccod$

;	me.ini - init memory
;
;	me_ini : (void) *void
;
;	o  RT-11 memory limits point to the last usuable word. This
;	   handles the case where all memory is available, i.e. 177776
;	   which would wrap around if the first free word were returned.
;
;	o  We add 2 to the initial value of j$btop (so that we don't
;	   wipe out static data) but we leave the value returned by
;	   .SETTOP alone, just in case we do obtain all memory in a
;	   virtual memory environment.
;
;	o  RT-11 USR swap logic is still pending (and will remain so :-).

	.enabl	lsb
10$:	mov	j$btop,-(r1)		; last word of program
	add	#2,(r1)+		; skip to first word of dynamic area
	.settop	#-2			; get the lot
	mov	r0,(r1)			; top of it all (sic)
me.ini::mov	#m$ebas,r1		; get limits
	mov	(r1)+,r0		; setup yet?
	beq	10$			; nope - do once-only
	mov	(r1)+,(r0)		; set initial element
	bis	#1,(r0)			; make it an empty
	return
	.dsabl	lsb

.end
