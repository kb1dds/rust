.title	rxpck - pack rad50 string
.include "lib:crt.mac"
asdef$
smini$	

code	rx_pck (*char, *WORD, cnt) *char

  proc	rx.pck	<r2,r3,r4>
	p1	str,r0			; the string
	p2	wrd			; result
	p3	cnt			; word count
;	()				; past string segment
    while cnt(sp) ne			;
	clr	r1			; clear the output
	dec	cnt(sp)			;
	mov	#3,r3			; get a counter
     repeat				; character loop
	mov	#r$xpck,r4		; get the states list
      repeat				; 
	movb	(r4)+,r2		; get the next offset
	leave	if eq			; end of list
	next	if pl			; skip offsets
	next	ifb (r0) lo (r4)+	; too low
	next	ifb (r0) hi (r4)+	; too high
	movbi	(r0)+,r4		; accept the character
	add	r4,r2			; and compute the present value
      endless				; 
	asl$	3,r1			; *8
	add	r1,r2			; 
	asl$	2,r1			; *32
	add	r2,r1			; +*8+new value
     count r3				; got another
	mov	r1,@wrd(sp)		; save result
	add	#2,wrd(sp)		; next word
    end					; words
  end					; r0 -> past string


ccstr$
r$xpck:	.byte	-9,perct.,perct.,-13,astrx.,astrx.,-9,dolar.,dolar.
;	.byte	-32.,space.,space.
	.byte	-18,dig0.,dig9.,-64,uprA.,uprZ.,-96.,lowA.,lowZ.,0
cccod$

.end
