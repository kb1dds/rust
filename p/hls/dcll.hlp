!!	LIBRARY
!!
!!	library/macro/list mlb:
!!
!B	LIBRAR
	/ALL		LI.ALL
	/CREATE		LI.CRE
	/DELETE		LI.DEL
	/EXTRACT	LI.EXT
	/INSERT		LI.INS
	/[NO]LIST	LI.LIS
	/MACRO		LI.MAC
	/MODULES	LI.MOD
	/MULTIPLE	LI.MUL
	/[NO]OBJECT	LI.OBJ
	/PROMPT		LI.PRO
	/PSECTS		LI.SEC
	/REMOVE		LI.REM
	/REPLACE	LI.REP
	/UPDATE		LI.UPD
	/WIDE		LI.WID
!S	LIBRARY library-file [in-files]
Creates, updates and inspects libraries.

!I	LF$		!! library file
!I	DLT$	.OBJ.
!I	IF5$		!! five input files
!I	DIT$	.OBJ.

Use the /MACRO option to create MACRO libraries.
!E	


!B	LI.ALL
!S	/ALL
Places all globals, including absolute, in the directory.
!B	LI.MOD
!S	/MODULES
Includes module names in the directory.
!B	LI.SEC
!S	/PSECTS
Includes program section (PSECT) names in the directory.
!B	LI.WID
!S	/WIDE
Creates a wide listing.
!B	LI.MUL
!S	/MULTIPLE
Permits multiple definitions of a global symbol.
!E

!B	LI.CRE
!S	/CREATE
Creates a new library.
!B	LI.MAC
!S	/MACRO library in-files
Creates a MACRO library.

o You cannot update MACRO libraries.
o Use the MLB utility to list MACRO libraries.	

!I	LF$		!! library file
!I	DLT$	.MAC.
!I	IF5$		!! five input files
!I	DIT$	.MLB.
!E	

!B	LI.DEL
!S	/DELETE library
Deletes modules from the library.

The system requests the names of modules to be deleted.
!I	LSTBL$
!B	LI.EXT
!S	/EXTRACT
Extracts modules from library.

The system prompts you for the names of modules (or global symbols).
!I	LSTBL$

A file is created with the name of the module and file type .OBJ.	
!B	LI.INS
!S	/INSERT
Inserts modules into the library.
!I	DTHIS$

!B	LI.LIS
	/ALLOCATE	FI$ALL
!S	/[NO]LIST[=out-file]
Creates a listing file.
!I	DEF$	/NOLIST.

!I	OF$
!I	DDV$	LP:
!B	LI.OBJ
	/ALLOCATE	FI$ALL
!S	/[NO]OBJECT[=out-file]
Suppresses the output library or defines its name.
!I	DEF$	/OBJECT, which creates a new version of the input library.

!I	OF$
!I	DOT$	.OBJ.
!B	LI.PRO
!S	/PROMPT
Prompts for additional input files.

!I	LSTSS$

.library/prompt modlib a,b,c,d,e,f	
*g,h,i	
*//	
!E	

!B	LI.REM
!S	/REMOVE
Removes global symbols from the library.

The system prompts for the names to be removed.
!I	LSTBL$

A subsequent update operation makes the global symbols visible again.
!E	

!B	LI.REP
!F	LIBRARY library in-file/REPLACE	
Replace modules in the library.

This option must follow each module to which it applies.	

.library mathlb mfunct/replace
!E	

!B	LI.UPD
!F	LIBRARY library filespec/UPDATE
Combines the /INSERT and /REPLACE functions.

This option must follow each module to which it applies.	

.library oldlib first/update,second/update
!E	
!!	LINK
!!
!!	ODT - does it work under SHAREplus?
!!	More LINK.SAV options
!!
!B	LINK
!!	/ALPHABETIZE	LN.ALP
	/[NO]BITMAP	LN.BIT
	/BOTTOM		LN.BOT
	/BOUNDARY	LN.BOU
	/CROSSREFERENCE	LN.CRF
	/DEBUG		LN.DEB
	/DUPLICATE	LN.DUP
	/[NO]EXECUTE	LN.EXE
	/EXTEND		LN.EXT
	/FILL		LN.FIL
	/FOREGROUND	LN.FOR
	/GLOBAL		LN.GLO
	/INCLUDE	LN.INC
	/LDA		LN.LDA
	/LIBRARY	LN.LIB
	/LIMIT		LN.LIM
	/LINKLIBRARY	LN.LIB
	/LOAD		LN.LOA
	/[NO]MAP	LN.MAP
	/PROMPT		LN.PRO
	/ROUND		LN.ROU
	/RUN		LN.RUN
	/SLOWLY		LN.SLO
	/STACK		LN.STA
	/SYMBOLTABLE	LN.SYM
	/TOP		LN.TOP
	/TRANSFER	LN.TRA
	/WIDE		LN.WID
	/XM		LN.XM
	\Prompts	LN.PRM
!S	LINK in-files
Links object modules and libraries into programs.

!I	IFS$
!I	DIT$	.OBJ.
!E	

!!	Prompts
!!
!B	LN.PRM	
!F	LINK prompts
LINK prompts for additional information.

The prompt order is as follows:

Qualifier	Prompt			Response
---------	------			--------
/TRANSFER	Transfer symbol?	symbol
/STACK		Stack symbol?		symbol		
/EXTEND		Extend section?		section
/BOUNDARY	Boundary section?	section
/ROUND		Round section?		section
/LOAD		Load section?		section:address list
/LIBRARY	Library search?		symbol list
/DUPLICATE	Duplicate symbol?	symbol list

The last three items accept a list values (one per line).
!I	LSTBL$
!E	

!!	/MAP
!!
!B	LN.MAP
	/ALLOCATE=n	FI$ALL
	/ALPHABETIZE	LN.ALP
	/GLOBAL		LN.GLO
	/WIDE		LN.WID
!S	/MAP[:out-file]
Creates a linkage map file.

!I	OF$
!I	DOT$	.MAP.
!I	DFN$	the name of the first input file.
!E

!B	LN.ALP
!S	/ALPHABETIZE
Sorts the LINK load map in alphabetical order.
!B	LN.GLO
!S	/GLOBAL
Adds a global symbol cross-reference list to the map file.

Same as /CROSSREFERENCE.
!B	LN.WID
!S	/WIDE
Produces a 132 column map listing.
!I	DEF$	80 columns.

!!	General
!!
!B	LN.BIT
!S	/[NO]BITMAP
Inserts a memory usage bitmap in the image.
!I	DEF$	/BITMAP.

Use /NOBITMAP for images that are not executed as RT-11 programs.
!B	LN.BOT
!S	/BOTTOM:n
Specifies the lowest (octal) address in the program.
!B	LN.BOU
!!	Prompts		LN.PRM
!S	/BOUNDARY:n
Specifies an address boundary.

The value must be a power of two.	
LINK rounds the preceding psect up to a multiple of the value.	

LINK prompts for boundary section name.
!B	LN.DEB
!S	/DEBUG[:in-file]
Includes ODT or specified debugger in the link.

ODT does not work under RUST/XM, VDT does.

!I	DINFO$	SET DEBUG.

!I	IF$
!I	DEF$	SY:ODT.OBJ.

.link test/debug=sy:vdt		! link with VDT
!B	LN.DUP
!!	Prompts		LN.PRM
!S	/DUPLICATE
Duplicates modules in overlay segments.

LINK prompts you for the names of duplicate modules.

!B	LN.EXE
	/ALLOCATE	FI$ALL
!S	/[NO]EXECUTE[=out-file]
Specifies the executable image file name.

/NOEXECUTE inhibits the creation of an executable file.

!I	OF$
!I	DFT$	.SAV.
!I	DFN$	the name of the first input file.
!B	LN.EXT
!!	Prompts		LN.PRM
!S	/EXTEND:n
Extends a program section.

Specify the minimum (octal) byte size of the section.

LINK prompts you for the section name.
!B	LN.FIL
!S	/FILL:n
Specifies the fill pattern for unused locations.

LINK usually fills unused locations with nulls.
!B	LN.FOR
!S	/FOREGROUND[:stacksize]
Produces an RT-11/FB foreground image.

You may specify the stacksize (in octal bytes) of the image.
!I	DEF$	200 (octal) bytes.
!B	LN.INC
!!	Prompts		LN.PRM
!S	/INCLUDE
Includes library modules in the link.

LINK prompts for the global symbol names.	
!B	LN.LDA
!S	/LDA
Produces an image in absolute binary loader format.
!I	DOT$	.LDA.
!B	LN.LIB
!S	/LIBRARY:[in-file]
Specifies a library file to be included in the link.

!I	IF$
!I	DIT$	.OBJ.
!B	LN.LIM
!S	/LIMIT:n
Limits the size of the image.

Specify the number of (decimal) kilowords.
!B	LN.LOA
!S	/LOAD
Specifies the load address for upto to eight program sections.

LINK prompts your for the name and absolute start address.
Terminate the list with a blank line.
!B	LN.PRO
!S	/PROMPT
Prompts for additional input files.

LINK prompts directly for additional files.
!I	LSTSS$
!E	
!B	LN.ROU
!!	Prompts		LN.PRM
!S	/ROUND:n
Rounds the segment to the specified value. The value must be 
a power of two.

LINK prompts for the name of the section to be rounded.
!E	

!B	LN.RUN
!S	/[NO]RUN
Executes the image after the link operation.

The default is /NORUN for LINK and /RUN for EXECUTE.
!E	

!B	LN.SLO
!S	/SLOWLY
Reserves more space for the link symbol table.

This results in a slower link operation.
!E	

!B	LN.STA
!!	Prompts		LN.PRM
!S	/STACK[:n]
Sets the image stack address.

You may specify an octal address for the image stack.

If you omit the value, LINK prompts you for a symbol name.	
The address of this symbol is used as the stack address.	

The default stack address is 1000 (octal) or the value specified with
/BOTTOM. LINK uses the default address if the symbol you specify is
undefined.
!E	

!B	LN.SYM
!S	/SYMBOLTABLE[:out-file]
Produces a symbol table file.

The file contains all global symbols defined in the link operation.	
The file may be used to pass information to subsequent link operations.

!I	OF$
!I	DOT$	.STB.
!E	
!B	LN.TOP
!S	/TOP:n
Relocates the program end to the (octal) address specified.
!E	

!B	LN.TRA
!S	/TRANSFER[:n]
Specifies the start address of the program.

You may specify an octal start address.

If you omit the value, LINK prompts you for a symbol name.	
The address of this symbol is used as the start address.
!E	

!B	LN.XM
!S	/XM
Enables the virtual .SETTOP feature.
!E	
!B	LN.CRF
!S	/CROSSREFERENCE
Adds a global symbol cross-reference list to the map file.

Same as /GLOBAL.
!E
!B	LOAD
	/AUTO		IN.AUT
	/LOG		IN.LOG
!S	LOAD devices
Installs and loads device drivers.

!I	DEVIC$

.load du		! loads the installed DU driver

o RUST/SJ installs the driver if it's not already present.
  See INSTALL for driver specification and selection.
