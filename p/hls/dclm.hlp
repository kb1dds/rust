!!	MACRO
!!
!!???	Only /DISABLE, not /ENABLE
!!
!B	MACRO
	/CROSSREFERENCE	MA.CRO
	/DISABLE	MA.DIS
	/ENABLE		MA.DIS
	/LIBRARY	MA.LIB
	/[NO]LIST	FI$LIS
	/[NO]OBJECT	FI$OBJ
!!	/PASS		MA.PAS
	/[NO]SHOW	MA.SHO
!S	MACRO in-files
Assembles MACRO source programs.

!I	COSYN$
!!I	IFS$
!I	DIT$	.MAC.
!E	

!B	MA.CRO
!S	/CROSSREFERENCE[:type]
Adds a cross-reference section to the listing file.

The type code specifies which objects should be listed:

Type		Object
----		------
C		Control sections
E		Error codes
M		Macro symbols
P		Permanent symbols
R		Register symbols
S		User defined symbols
default		User defined symbols, Macro symbols and error codes
!E	

!B	MA.DIS
!S	/ENABLE:types
!S	/DISABLE:types
Specifies MACRO .DSABL/.ENABL initial settings.

Type	Default	Operation
----	-------	-----------
ABS	Off	Absolute binary output
AMA	Off	Assembles all absolute addresses as relative
CDR	Off	Treats columns 73 and greater as comments
DBG	Off	Produces internal debug records
FPT	Off	Floating-point truncation
GBL	On	Treats undefined symbols as globals
LC	On	Accepts lower case ASCII input
LCM	Off	.IF IDN/DIF are case sensitive
LSB	Off	Local symbol block
MCL	Off	Automatic .MCALL
PNC	On	Binary output
REG	On	Mnemonic definition of registers
!E	

!B	MA.LIB
!F	MACRO in-file/LIBRARY
Indicates the associated file is a MACRO library.

This option must follow an input file specification.

User defined libraries are searched in the order specified.	
The system macro file, SY:SYSMAC.SML, is used to resolve undefined macros.
!E	

!B	MA.SHO
!S	/[NO]SHOW:types
Specifies .LIST or .NLIST directives.

Type	Default	Operation
----	-------	---------
BEX	On	Binary extension code
BIN	On	Binary code
CND	On	Unsatisfied conditions, .IF & .ENDC statements
COM	On	Comments
LD	Off	Listing directives
LOC	On	Location counter
MC	On	Macro calls, repeat range expansions
MD	On	Macro and repeat range definitions
ME	Off	Macro expansions
MEB	Off	Macro binary code
SEQ	On	Source line numbers
SRC	On	Source code
SYM	On	Symbol table
TOC	On	Table of contents
TTM	Off	Terminal output mode
!E	
!!	MAREE
!!
!B	MAREE
	/[NO]DELETE	CC.DEL
	/[NO]MACRO	CC.MAC
	/[NO]OBJECT	FI$OBJ
!S	MAREE in-files
Compiles Maree source programs.

!I	COSYN$
!!I	IFS$
!I	DIT$	.MAS

.maree mos:vmount/object:mob:vmount
.link mob:vmount/exe:mob:/map:mob:,mrb:(marlib,sdrt11,reclib)

o Many RUST utilities are implemented in the in-house Maree language.
!E	
!!	MD
!!
!B	MD
	/ALLOCATE	MD.ALL
	/SEGMENTS	MD.SEG
	/EXTRA		MD.EXT
!F	MD directory
Creates a directory.

!I	DIR$

The default directory size is 1000 blocks. The directory name
is used as the home block volume and owner identification.

BETA: Specify the device name explicitly for forward compatibility.
BETA: Directories can't be created on network devices (NF:)

.MD SY:\TEST\		! create a test directory

!E

!B	MD.ALL
!S	/ALLOCATE=size
Allocates space for the directory in blocks.

The default size is 1000 blocks.
!B	MD.SEG
!S	/SEGMENTS=decimal
Specifies the number of directory segments. The default is 4. 
The valid range is 1 to 31.
!B	MD.EXT
!S	/EXTRA=n
Specifies the extra words per directory entry.
The default is three which supports RT11X extensions.
!E
!!	MOUNT
!!
!B	MOUNT
!S	MOUNT device file [logical-name]
Makes an LD: volume available for access.

MOUNT automatically installs and loads the LD: driver.

!I	DEVIC$
!I	VOLLB$
!I	LOGNM$
!E
