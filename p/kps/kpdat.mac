.title	KPDAT	editor data
.include "kps:kpmac.mac"
.include "kps:kpkey.mac"
aldef$
vax$	$xabfhcdef

npgbl$	np100g
npgbl$	npdisg
npgbl$	nppasg
npgbl$	npoptg
npgbl$	nptapg
nproo$	npcomr


data	virtual key map

c$lact::.word	0

	.macro	vkey$	val, gld=0
.if ne wrd$c
		.byte	val, gld
.iff
		.byte	val!vfmsk$, gld!vfmsk$
.endc
	.endm
.if eq wrd$c
	.macro	vctl$	val, gld=0
		.byte	val, gld!vfmsk$
	.endm
.endc

array	v$kmap
	vkey$	0		;	vkunk.	0
	vkey$	vfall.		;	vkca.	1
	vkey$	vfbol.		;^B	vkcb.	2
	vkey$	vfcop.		;	vkcc.	3
	vkey$	0;vfgld.,vfcmd.	;	vkcd.	4
	vkey$	0;vfsel.	;	vkce.	5
	vkey$	0, ;vffns.	;^F	vkcf.	6
	vkey$	0		;	vkcg.	7
	vkey$	0		;^H	vkch.	8
	vkey$	vftab.		;HT	vkci.	9
	vkey$	0		;LF	vkcj.	10
	vkey$	0;vfdll.	;	vkck.	11
	vkey$	vffee.		;FF	vkcl.	12
	vkey$	0		;CR	vkcm.	13
	vkey$	vfund.;vffdn.	;	vkcn.	14
	vkey$	0		;^O	vkco.	15
	vkey$	0;vffdp.	;	vkcp.	16
	vkey$	0		;^Q	vkcq.	17
	vkey$	vfpnt.		;	vkcr.	18
	vkey$	0		;^S	vkcs.	19
	vkey$	vfita.		;	vkct.	20
	vkey$	0		;^U	vkcu.	21
	vkey$	vfins.		;	vkcv.	22
	vkey$	0;vfdlc.	;	vkcw.	23
	vkey$	vfrem.		;	vkcx.	24
	vkey$	0		;^Y	vkcy.	25
	vkey$	vfqui.		;^Z	vkcz.	25
	vkey$	vfcup.  	;	vkcup.	27
	vkey$	vfcdn.		;	vkcdn.	28
	vkey$	vfclf.		;	vkclf.	29
	vkey$	vfcrt.		;	vkcrt.	30
	vkey$	0		;	vkla.	31
	vkey$	0,vfbul.	;	vklb.	32
	vkey$	0		; col	vklc.	33
	vkey$	0,vfodt.	;	vkld.	34
	vkey$	0,vfidt.	;	vkle.	35
	vkey$	0,vffmt.	;	vklf.	36
	vkey$	0		;	vklg.	37
	vkey$	0,vfhtm.	; hrule	vklh.	38
	vkey$	0;0,vfidt.	;	vkli.	39
	vkey$	0		;	vklj.	40
	vkey$	0		;	vklk.	41
	vkey$	0,vflow.	;	vkll.	42
	vkey$	0		;	vklm.	43
	vkey$	0;0,vfnxt.	;	vkln.	44
	vkey$	0;0,vfopn.;OPEN	; outd	vklo.	45
	vkey$	0		;	vklp.	46
	vkey$	0		;	vklq.	47
	vkey$	0,vfrul.	; row	vklr.	48
	vkey$	0;0,vfsav.;SAVE	; 	vkls.	49
	vkey$	0		; table	vklt.	50
	vkey$	0,vfupr.	;	vklu.	51
	vkey$	0		;	vklv.	52
	vkey$	0		;	vklw.	53
	vkey$	0,vfexi.	;	vklx.	54
	vkey$	0		;	vkly.	55
	vkey$	0		;	vklz.	56
	vkey$	0		;	vk57.	57
	vkey$	0		;	vk58.	58
	vkey$	0		;	vk59.	59
	vkey$	vffnd.		;	vkfnd.	60
	vkey$	vfins.		;	vkins.	61
	vkey$	vfrem.		;	vkrem.	62
	vkey$	vfsel.		;	vksel.	63
	vkey$	vfprv.,vfsof.	;	vkprv.	64
	vkey$	vfnxt.,vfeof.	;	vknxt.	65
	vkey$	vflin.,vfoln.	;	vkkp0.	66
	vkey$	vfwrd.,vfcas.	;	vkkp1.	67
	vkey$	vfeol.,vfdle.	;	vkkp2.	68
	vkey$	vfcha.,vfsin.	;	vkkp3.	69
	vkey$	vfadv.,vfbot.	;	vkkp4.	70
	vkey$	vfbak.,vftop.	;	vkkp5.	71
	vkey$	vfcut.,vfins.	;	vkkp6.	72
	vkey$	vfpag.,vfcmd.	;	vkkp7.	73
	vkey$	vfsec.,vffil.	;	vkkp8.	74
	vkey$	vfapp.,vfrep.	;	vkkp9.	75
	vkey$	vfsel.,vfres.	;	vkdot.	76
	vkey$	vfent.,vfsub.	;	vkent.	77
	vkey$	vfdlc.,vfudc.	;	vkcom.	78
	vkey$	vfdlw.,vfudw.	;	vkmin.	79
	vkey$	vfgld.		;	vkpf1.	80
	vkey$	vfhlp.		;	vkpf2.	81
	vkey$	vffnx.,vffnd.	;	vkpf3.	82
	vkey$	vfdll.,vfudl.	;	vkpf4.	83
	vkey$	0		;	vkf1.	84
	vkey$	0		;	vkf2.	85
	vkey$	0		;	vkf3	86
	vkey$	0		;	vkf6.	87
	vkey$	0		;	vkf7.	88
	vkey$	0		;	vkf8.	89
	vkey$	0		;	vkf9.	90
	vkey$	0		;	vkf10.	91
	vkey$	0		;	vkf11.	92
	vkey$	0		;	vkf12.	93
	vkey$	0		;	vkf13.	94
	vkey$	0		;	vkf14.	95
	vkey$	vfhlp.		;	vkhlp.	96
	vkey$	vfcmd.		;	vkdo.	97
	vkey$	0		;	vkf17.	98
	vkey$	0		;	vkf18.	99
	vkey$	0		;	vkf19.	100
	vkey$	0		;	vkf20.	101
	vkey$	vfrub.		;	vkrub.	102	
	.even	
data	virtual functions

	.macro	vfun$	fun
		.word	fun
	.endm

	.macro	vfun$x	fun
		.word	fun+1
	.endm

array	v$ffun
	vfun$	vf$unk	; 0
	vfun$x	vf$cup	; 1
	vfun$x	vf$cdn	; 2
	vfun$x	vf$clf	; 3
	vfun$x	vf$crt	; 4
	vfun$x	vf$fnd	; 5
	vfun$	vf$ins	; 6
	vfun$	vf$rem	; 7
	vfun$	vf$sel	; 8
	vfun$x	vf$prv	; 9
	vfun$x	vf$nxt	; 10
	vfun$	vf$hlp	; 11
	vfun$	vf$cmd	; 12
	vfun$	vf$cut	; 13
	vfun$	vf$rep	; 14
	vfun$	vf$all	; 15
	vfun$	vf$cop	; 16
	vfun$	vf$rub	; 17
	vfun$	vf$pnt	; 18
	vfun$	vf$exi	; 19
	vfun$	vf$unk	; 20	vfgld.
	vfun$	vf$opn	; 21
	vfun$	vf$qui	; 22
	vfun$	vf$adv	; 23
	vfun$	vf$app	; 24
	vfun$x	vf$bot	; 25
	vfun$	vf$cha	; 26
	vfun$	vf$dlc	; 27
	vfun$	vf$dle	; 28
	vfun$	vf$dll	; 29
	vfun$	vf$dlw	; 30
	vfun$	vf$ent	; 31
	vfun$	vf$eol	; 32
	vfun$	vf$fil	; 33
	vfun$	vf$lin	; 34
	vfun$	vf$oln	; 35
	vfun$	vf$pag	; 36
	vfun$	vf$res	; 37
	vfun$	vf$sec	; 38
	vfun$	vf$sin	; 39
	vfun$	vf$sub	; 40
	vfun$x	vf$top	; 41
	vfun$	vf$udc	; 42
	vfun$	vf$udl	; 43
	vfun$	vf$udw	; 44
	vfun$	vf$wrd	; 45
	vfun$	vf$bak	; 46
	vfun$	vf$cas	; 47
	vfun$x	vf$fnx	; 48
	vfun$x	vf$fmt	; 49
	vfun$	vf$cnt	; 50
	vfun$	vf$low	; 51
	vfun$	vf$upr	; 52
	vfun$	vf$dft	; 53
	vfun$x	vf$sav	; 54
	vfun$x	vf$sof	; 55
	vfun$x	vf$eof	; 56
	vfun$	vf$bul	; 57
	vfun$	vf$idt	; 58
	vfun$	vf$odt	; 59
	vfun$	vf$bol	; 60
	vfun$	vf$und	; 61
	vfun$	vf$ita	; 62
	vfun$	vf$tab	; 63
	vfun$	vf$fee	; 64
	vfun$x	vf$htm	; 65
	vfun$	vf$rul	; 66
data	command processing

;	set flags

	mode	s$tflg	stbnd$!sttab$
	mode	s$tflx	stret$!stdrk$

;	Command modes

	mode	c$mcha			;character mode
	mode	c$mspa			;whitespace mode
;V4	mode	c$mnot			;'
;V4	mode	c$mand			;;
;V4	mode	c$mnum			;numeric
;V4	pointer	c$madr			;@
;V4	value	c$malp			;' - alpha
;V4	value	c$mstr			;" string

;	Internal modes

;V4	mode	c$mcla			;class: plain, tick, box
	mode	c$mctx			;command/text mode
;V4	mode	c$mprg			;program mode
;V4	counter	c$mrpt			;repeat block counter

	value	c$oact			;command prompt active

data	display control

	state	d$iini			;init display
	state	d$iwin			;update window
	state	d$ifmt			;update format
	state	d$ilin			;update line
	state	d$ista			;update status line
	state	d$ifil			;space fill tabs
	counter	d$itab	7		;tab alignment (usually 7)
	latch	d$ifnd			;cursor found
	coord	d$iX			;X cursor position
	coord	d$iY			;Y cursor position
					;
	line$	l$iver			;verify line
	overlay
		string	<>	<"			">
		string	v$evar	<"   ">
		string	v$eval	<"      ">
		string	<>	<"	">
		string	v$efil	<<0>>
	align end
data	editor control

	state	e$donc	-1		;once only flag
;V4	state	e$dshp	0		;SHAREplus flag
	pointer	e$dosp			;original stack pointer
	state	e$dcli	0		;CLI command coming
data	error messages

	string	e$rmem	</?MLE-E-More memory please/>
	align
data	file processing

	pointer	f$iipt			;input file block pointer
	pointer	f$iopt			;output file block pointer
	pointer	f$iinc			;include block
pdp$	value	f$ichn			;channel number
					;
	line$	f$istr			;input file spec string
	line$	f$idef			;default file spec string
					;
.if ne smpdp.
	string	f$idev	</dk:/<0>>	;default device
.iff					;
	string	f$idev	</sys$login:/<0>>;
.endc					;
	align				;
data	mark array

	table	m$kbot			;start of arry
		pointer	m$ksel		;select
;V4		pointer	m$k3		;start of last read/write
;V4		pointer	m$k4		;start of last insert
;V4		pointer	m$k5		;end of last insert
;V4		pointer	m$k6		;operate pointer
;V4		pointer	m$k7		;quote/shift
	label	m$ktop			;
data	memory allocation

	pointer	m$ebot		;bottom of available memory
	pointer	m$ecur		;current memory pointer
	pointer	m$etop		;last address
pdp$	address	m$eavl		;memory available

	size	m$etbs	bstxt.	;text buffer size
	size	m$epbs	bspas.	;paste buffer size
data	position control

;	Buffer position

	pointer	p$obeg			;start of buffer
	pointer	p$obot			;start of used area
	pointer	p$odot			;cursor position
	pointer	p$otop			;end of used area
	pointer	p$ocho			;chopped position
	pointer	p$olim			;buffer limit
	pointer	p$oend			;end of buffer
	value	p$ocol			;cursor column

;	Position routine locals	

	state	p$oadj			;adjust - 1 or -1
	pointer	p$oext			;extreme - p$obot or p$otop
data	screen control

	state	s$conc			;once-only code

	index	s$clin			;first line offset
	coord	s$cX			;X position
	coord	s$cY			;Y position
	state	s$cfnt			;screen font
	state	s$catt			;screen attributes

	state	s$csam			;screen same - unchanged
					;
	pointer	s$cobp			;old buffers pointer
	pointer	s$cnbp			;new buffers pointer
	pointer	s$ccor	v$tcor		;correlation map pointer
	value	s$clct	sclct.		;current line count

	pointer	s$cbmp			;bumper address
	array	s$cold	sclct.	addr.	;OLD array
	filler		1	addr.	;
	array	s$cnew	sclct.	addr.	;NEW array
	filler		1	addr.	;
data	search control

	aligned int.			;
	pointer	s$emod			;model string pointer
	pointer	s$ealt	l$ialt		;alternate string pointer
					;
	pointer	s$edot			;local dot
	counter	s$ecnt			;search count
					;
	array	l$ialt	134.	byte.	;alternate model - upper/lower switched
data	status

	state	s$tabt			;terminal abort seen
	state	s$tovf			;output overflow
	byte	s$tpes			;previous escape
	byte	s$tpgr			;previous graphic
	byte	s$tesc			;graphic escape
	byte	s$tgra			;graphic
	value	s$tX			;previous X
	value	s$tY			;previous Y

data	Terminal control

	state	t$tter			;terminator seen
	state	t$tmod			;input mode
	state	t$tcas			;gt => upper case conversion
	state	t$tlst			;last line mode
	value	t$tpsh			;pushed character/function
	pointer	t$tplx			;current line plex
	pointer	t$tnxt			;next terminal character 
data	verify control

	aligned	int.
	char	v$enam			;verify variable name
data	permanent data

;	A copy of this data is saved for each user

;V4 .save
;V4 vax$	smabs$
;V4 vax$	<.align	page>		;align it
;V4 pdp$	.asect	
;V4 pdp$	<.=^o1000>
;V4 label	p$ebot

array	v$abot			;system variables
	value	v$acvt	0	;c - conversion
	value	v$agra	1  	;g - graphic control
	value	v$amle	1	;  - old mle graphics
	value	v$aisz	0	;i - input file size
	value	v$ajus	1	;j - justify newlines		set by start
;	value	v$amut	0	;m - mute - no errors
	value	v$anew	0	;n - new characters in file	set by insert
	value	v$aosz	0	;o - output file size
	value	v$apos	0	;p - 1 => report cursor position
	value	v$asel	0	;q - 1 <> quote/shift o.k. 	cleared often
	value	v$area	0	;r - last block read
	value	v$atab	8	;t - tab size
	value	v$amod	200	;v - vt model. 200.
	value	v$awri	0	;w - last block written
	value	v$awid	80	;x - x-axis width
	value	v$amid	16	;y - y-axis cursor midline
	value	v$alft	0	;    left margin
	value	v$argt	0	;    right margin
	value	v$ahtm	0	; html on/off
	value	v$afmt	0	;1 => text is formatted
;page	Permanent file data

;[sic]	page statement kills PDP-11 ASECT

	file$	f$brea		;input file
	file$	f$bwri		;output file
	file$	f$binc		;include block

;	String variables and pointers

;V4	line$	l$istr		;string variable input
;V4	.irpc	$,<ABCDEFGHIJKLMNOPQRSTUVWXYZ>
;V4		line$	l$i'$	siz=64
;V4	.endr
;V4	label	l$imap
;V4	.irpc	$,<ABCDEFGHIJKLMNOPQRSTUVWXYZ>
;V4	pointer	<>	l$i'$
;V4	.endr

;	Saved lines

	line$	l$icom		;internal command line
	line$	l$icmd	s$vcmd	;command line
	line$	s$vcmd		;saved command line
	line$	l$iins	s$vins	;insert line
	line$	s$vins		;saved insert
	line$	l$isea	s$vsea	;search line
	line$	s$vsea		;saved search line
	line$	l$iund		;undelete line

;V4 pdp$	<.=.-p$ebot+511&^c511+p$ebot>	;round up data section
;V4 vax$	<.align	page>		;
;V4 label	p$etop
;V4 	.restore
.end

data	keyboard vector

form	IVK	Virtual Keyboard

array v$kvec
	.word	0	;	vkunk.	0
	.word	0	;	vkca.	1
	.word	0	;	vkcb.	2
	.word	0	;	vkcc.	3
	.word	0	;	vkcd.	4
	.word	0	;	vkce.	5
	.word	0	;	vkcf.	6
	.word	0	;	vkcg.	7
	.word	0	;	vkch.	8	; bs
	.word	0	;	vkci.	9	; ht
	.word	0	;	vkcj.	10	; cr
	.word	0	;	vkck.	11
	.word	0	;	vkcl.	12	; lf
	.word	0	;	vkcm.	13
	.word	0	;	vkcn.	14
	.word	0	;	vkco.	15
	.word	0	;	vkcp.	16
	.word	0	;	vkcq.	17
	.word	0	;	vkcr.	18
	.word	0	;	vkcs.	19
	.word	0	;	vkct.	20
	.word	0	;	vkcu.	21
	.word	0	;	vkcv.	22
	.word	0	;	vkcw.	23
	.word	0	;	vkcx.	24
	.word	0	;	vkcy.	25
	.word	0	;	vkcz.	26
	.word	0	;	vkup.	27
	.word	0	;	vkdwn.	28
	.word	0	;	vklft.	29
	.word	0	;	vkrgt.	30
	.word	0	;	vkfnd.	31
	.word	0	;	vkins.	32
	.word	0	;	vkrem.	33
	.word	0	;	vksel.	34
	.word	0	;	vkprv.	35
	.word	0	;	vknxt.	36
	.word	0	;	vkkp1.	37
	.word	0	;	vkkp2.	38
	.word	0	;	vkkp3.	39
	.word	0	;	vkkp4.	40
	.word	0	;	vkkp5.	41
	.word	0	;	vkkp6.	42
	.word	0	;	vkkp7.	43
	.word	0	;	vkkp8.	44
	.word	0	;	vkkp9.	45
	.word	0	;	vkdot.	46
	.word	0	;	vkent.	47
	.word	0	;	vkcom.	48
	.word	0	;	vkmin.	49
	.word	0	;	vkpf1.	50
	.word	0	;	vkpf2.	51
	.word	0	;	vkpf3.	52
	.word	0	;	vkpf4.	53
	.word	0	;	vkf1.	54
	.word	0	;	vkf2.	55
	.word	0	;	vkf3	56
	.word	0	;	vkf6.	57
	.word	0	;	vkf7.	58
	.word	0	;	vkf8.	59
	.word	0	;	vkf9.	60
	.word	0	;	vkf10.	61
	.word	0	;	vkf11.	62
	.word	0	;	vkf12.	63
	.word	0	;	vkf13.	64
	.word	0	;	vkf14.	65
	.word	0	;	vkhlp.	66
	.word	0	;	vkdo.	67
	.word	0	;	vkf17.	68
	.word	0	;	vkf18.	69
	.word	0	;	vkf19.	70
	.word	0	;	vkf20.	71

.end
 
