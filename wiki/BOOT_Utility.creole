==BOOT==            

BOOT.SYS is the RUST bootstrap manager and monitor.

BOOT.SYS is a dual-purpose utility: You run it as an management application to configure the bootstrap environment.
[[code format="text"]]
  .r boot.sys             ! run boot interactively
  .set image rust         ! select the system image
  .exit                   ! er, exit
[[code]]
BOOT's second function is to act as a proxy RT-11 bootstrap.
[[code format="text"]]
  .copy/boot boot dev:    ! copy boot to device
  .boot dev:              ! boot boot.sys
[[code]]
* This utility has its own HELP facility.
* BOOT.SYS requires 28kw kernel memory to operate

----
**BOOT Operation**

  The RUST bootstrap takes place in a number of stages.

# BOOT.SYS is bootstrapped using the usual RT-11 bootsrap procedure. BOOT.SYS is a tiny RT-11 operating system entirely contained in the four-block RT-11 bootsrap disk area (blocks 2 to 5).
# BOOT.SYS activates the program specified by the SET IMAGE command. This is usually RUST/SJ or RUST/XM but can be any program that confines its activities to the EMTs etc provided by BOOT.SYS.
# RUST/SJ begins by determining its environment and then loading the essential devices (TT:, SY: and clock). This process is controlled by the [BOOTSTRAP] section of RUST.INI.
# The RUST/SJ monitor is relocated to high memory and activated. It's first task is to execute the command file SY:RUST.COM which takes care of loading additional devices etc.

----
**BOOT Resident Monitor**

BOOT.SYS provides a subset RT-11 operating system environment. See Programming for a list of software facilities. BOOT prompts for a command when started with the NOIMAGE option, or when a program exits. You respond with the name of a program:
[[code format="text"]]
  BOOT> cpu               ! run CPU.SAV, a test program
[[code]]
BOOT supports these control keys:
[[code format="text"]]
  Control Key     Purpose
  -----------     -------
  CTRL-C          Interrupt program
  CTRL-H          Halt computer
  CTRL-Q          Restart output
  CTRL-R          Pass control to ROM boot (173000)
  CTRL-S          Suspend output
[[code]]
----
**BOOT Programming**

Programming facilities available from BOOT.

* Standard RT-11 programs may be loaded. Overlays are supported.
* The standard RMON database is present and the clock functions.
* SY: supports .DSTATU, .CSTAT, .LOOKUP, .READ and .CLOSE.
* The terminal supports .TTYIN, .TTYOUT, .GTLIN and .PRINT.
* .DATE, .EXIT, .GJOB, .GVAL, .GTIM, .PEEK, .SETTOP are supported.
* .DELETE, .ENTER, .RENAME, .SAVEST, .REOPEN, .WRITE, .SPFUN are invalid.
* The remaining program requests are ignored (R0 unchanged, C=0).

SY: is the only supported device. BOOT.SYS uses the bootstrap driver, usually located in block zero of a device, to access the system disk. The driver is swapped out of low memory when a program is running and swapped back to handle I/O operations.

This small subset of RT-11 is sufficient for RUST/SJ and RUST/XM to get started and for test programs which use BOOT as a maintenance monitor.

