==Dormant Projects==

Largely completed dormant projects are described below.

----
**DUP Replacement**

The earlier implementations of RUST did not supply replacements for RT-11 DUP.SAV. VUP.SAV implements most of the DUP.SAV functionality. SQUEEZE, /WAIT and magtape operations remain to be completed.

----
**Driver Replacement**
Earlier implementations of RUST did not supply replacements for the standard RT-11 drivers. Completed replacement drivers are DD, DL, DU, DY, LP, LP, LS, NL, RK, SL, TT and VM. The DY driver includes DX functionality. 

The obvious omissions are the magtape and ethernet drivers. The Baldwin Ethernet drivers could be ported. Magtape support is a low priority.

----
**Sub-Directories**

Sub-directories are being implemented as part of the renovation goal. The work is complete for RUST/SJ, VUP and the Windows networking facility.

The remaining tasks are the RUST/XM implementation and the addition of sub-directory support to VIP and VUP for the COPY, DIR, etc commands.

----
**Decus-C Platform**

At the beginning of the new Rust life-cycle it was unclear which C compiler was most appropriate. The earlier choice had been Whitesmiths. Decus-C had a reputation of being unstable and was bulky. The Unix V5 compiler was also considered (under the RUST/XM Unix AME). After a testing period the decision was to go with Decus-C. The major work then done follows:
* Various compiler and assembler bugs were fixed. Some significant.
* The compiler overlay structur was internally optimised to support a larger symbol table (RT-11/Rust only).
* The linking process was simplified (no prefatory SUPORT module required).
* A RUST conditional was added to the compiler sources to modify the compilers defaults, error messaging and to remove the debugger back-tracking word from each routine's stack frame.
* A "CC" command was added to Rust DCL. CC automates the use of the Decus-C preprocessor, compiler and assembler. The Whitesmiths and Unix compilers were also supported.

The resulting sources need to be isolated, documented and published.

----
**C Runtime Library: CRT**

As hinted above, the Decus-C runtime was too large for use with RT-11 utilities. CRT.OBJ, a spartan C runtime, was written to solve this problem. CRT is used for all Rust PDP-11 utilities. New modules are added as needed. 

More standard C modules need to be migrated or implemented.


 