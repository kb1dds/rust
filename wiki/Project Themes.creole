==Project Themes== 

Underlying the various Rust projects are a number of general themes as described below.

----
**Kit Completion**

The assumption for earlier Rust kits was that they would be used in conjunction with an RT-11 system. In particular, Rust systems relied on the RT-11 drivers and many of the apps.

New Rust is planned to be independent of RT-11 and thus there's an overall requirement of completing the Rust kit to include drivers and the missing apps.

Much of that work is already done, as described in other project notes. Major omissions remain the magtape/ethernet drivers and the language development tools MACRO, LINK and LIBR.

----
**Web Port**

An overall goal is to clean up the sources, rationalize the functionality of the systems and apps, move the documentation to this wiki and eventually publish the code somewhere on the web.

----
**Renovation**

An overall goal is to adapt the systems, within reason, to more recent trends. For example, the single-line editor has been simplified, sub-directories have been added (to RUST/SJ thus far), a mouse driver has been implemented, .INI files are being used.

----
**Normalization**

A general goal is to normalize command sets and system behaviors. For example, the command sets for the RUST/SJ debuggers, the RUST/XM debugger, the Windows emulator debugger and PATCH utility are inconsistent. The normalization goal here is define a common standard to be implemented in each tool.

----
**Rider Platform Consolidation**

As decent implementation languages were unavailable in the seventies and eighties, HAMMONDsoftware developed its own tools. Many utilities were written in the in-house Maree language. Maree, along with an ornate implementation of structured Macro were later ported to VMS.

In the late eighies, Rider, was developed as a C-front-end preprocessor language. It was ported to VMS, Dos, Windows and eventually **back** to RT-11/Rust. New utilities were written in Rider with Maree and structured Macro falling into disuse.

The Rider Platform Consolidation project aims to replace most of the Maree and some of the structured Macro code with Rider implementations. Target apps include BUILD, DUMP, LD, MARK, PATCH, SEARCH.

New apps have been or being implemented in Rider, including BINDIF, SRCDIF, MD, RD, SPLIT and VUP (i.e. DUP).

----
**Tools Rationalization**

Over the years a large number of minor tools have accrued, each idiosyncratic in its own little way. The goal of the rationalization theme is to collect this functionality in a smaller number of apps, and to implement these apps in Rider/C.

----
**Unvaxing**

Originally RUST/XM was primarily used as a multi-user system with VAX/VMS providing many of the models, particularly in the multi-processing/multi-user area.

These days RUST/XM tends to be used exclusively as a single-user machine and VMS-compatibility has little significance. For example, there is no reason to now provide VMS-compatibility for the DIFFERENCE command options or a VMS-compatible user accounting system or SHUTDOWN utility.

Thus there's an opportunity here to remove or redesign some functionality.

----
**Y2K**

The systems, utilities and documentation have all been converted to support Y2K dates (although every so often a new application pops up that needs conversion).