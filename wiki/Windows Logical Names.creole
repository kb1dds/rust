==Windows Logical Names==

RUST Windows components are configured via DEC-style logical names.

[[Windows Logical Names#Architecture|Architecture]]
[[Windows Logical Names#Commands|Commands]]
[[Windows Logical Names#Storage|Storage]]
[[Windows Logical Names#Client Usage|Client Usage]]
[[Windows Logical Names#ROLLEXE|ROLL.EXE]]
[[Windows Logical Names#ROLLDEF|ROLL.DEF]]
----
**[[#Architecture]]Architecture**
The RUST Windows logical name architecture:
[[image:lna.jpg]]
* Logical names are defined with the command shell SHE.EXE.
* Logical names are system wide and stored permanently across bootstraps.
* RUST Windows applications translate all device names before accessing files.
* Emulators and remote PDP-11s access files via NF: and DD: servers.
* System usage of logical names is summarised in [[Windows Name Space]]
----
**[[#Commands]]Commands**

Logical names are defined, displayed and deleted using shell commands:
[[code format="text"]]
.define pqs c:\p\pqs        ! define a logical name
.show logical pq*           ! display logical names
.undefine pqs               ! undefine logical names
[[code]]

----
**[[#Client Usage]]Client Usage**
* Device name translation applies to the PDP-11 emulator and NF network clients.
* Logical names longer than three characters are not visible to PDP-11 clients.
* However, client names are first translated with the tag "RT_" prefixed.

----
**[[#ROLLEXE]]ROLL.EXE**
* Logical name commands are implemented by the RUST Windows application ROLL.EXE.
* Use "ROLL HELP" to obtain help information.
* The name "ROLL" comes from the locution "name roll".

----
**[[#ROLLDEF]]ROLL.DEF**
* Logical names are stored in the text file "root:roll.def".
* Each entry has the form "lognam := eqvnam".
* Entries are sorted alphabetically.
* Because definitions are stored on disk they are permanent.







 